import { useState } from "react";

const faqs = [
  {
    title: "What does your company do?",
    text: "Lorem ipsum dolor sit amet consectetur, adipisicing elit. Accusantium, quaerat temporibus quas dolore provident nisi ut aliquid ratione beatae sequi aspernatur veniam repellendus.",
  },
  {
    title: "Are there any job openings at your company?",
    text: "Pariatur recusandae dignissimos fuga voluptas unde optio nesciunt commodi beatae, explicabo natus.",
  },
  {
    title: "How can I contact customer support?",
    text: "Excepturi velit laborum, perspiciatis nemo perferendis reiciendis aliquam possimus dolor sed! Dolore laborum ducimus veritatis facere molestias!",
  },
];

export default function App() {
  return (
    <div>
      <Accordion data={faqs} />
    </div>
  );
}

function Accordion({ data }) {
  const [curOpen, setCurOpen] = useState(null);

  const accordionStyle = {
    width: "700px",
    margin: "100px auto",
    display: "flex",
    flexDirection: "column",
    gap: "24px",
  };

  return (
    <div style={accordionStyle}>
      {data.map((el, i) => (
        <AccordionItem
          curOpen={curOpen}
          onOpen={setCurOpen}
          title={el.title}
          num={i}
          key={el.title}
        >
          {el.text}
        </AccordionItem>
      ))}
    </div>
  );
}

function AccordionItem({ num, title, curOpen, onOpen, children }) {
  const isOpen = num === curOpen;

  function handleToggle() {
    onOpen(isOpen ? null : num);
  }

  const itemStyle = {
    boxShadow: "0 0 30px rgba(0, 0, 0, 0.1)",
    padding: "5px 24px",
    paddingRight: "48px",
    cursor: "pointer",
    borderTop: "4px solid #fff",
    borderBottom: "4px solid #fff",
    display: "grid",
    gridTemplateColumns: "auto 1fr auto",
    columnGap: "24px",
    rowGap: "32px",
    alignItems: "center",
    ...(isOpen && {
      borderTop: "4px solid #087f5b",
    }),
  };

  const numberStyle = {
    fontSize: "24px",
    fontWeight: "500",
    color: isOpen ? "#087f5b" : "#ced4da",
  };

  const titleStyle = {
    fontSize: "24px",
    fontWeight: "500",
    color: isOpen ? "#087f5b" : "#343a40",
  };

  const iconStyle = {
    fontSize: "24px",
    fontWeight: "500",
  };

  const contentBoxStyle = {
    gridColumn: "2 / -1",
    paddingBottom: "16px",
    lineHeight: "1.6",
  };

  return (
    <div style={itemStyle} onClick={handleToggle}>
      <p style={numberStyle}>{num <= 9 ? `0${num + 1}` : num + 1}</p>
      <p style={titleStyle}>{title}</p>
      <p style={iconStyle}>{isOpen ? "-" : "+"}</p>
      {isOpen && <div style={contentBoxStyle}>{children}</div>}
    </div>
  );
}

